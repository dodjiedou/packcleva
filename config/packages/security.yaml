security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User : auto

    role_hierarchy:
            ROLE_ASSISTANT:        [ROLE_USER]
            ROLE_AGENTDESANTE:     [ROLE_USER]
            ROLE_AGENTDESURVIE:    [ROLE_USER]
            ROLE_COMPTABLE:        [ROLE_USER]
            ROLE_COORDONNATEUR:    [ROLE_ASSISTANT,ROLE_AGENTDESANTE]

            
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
       app_user_provider:
            entity:
                class: App\Entity\User
                property: email
         
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticators: [App\Security\LoginAuthenticator]
            logout:
                  path: app_logout


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

            
            

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # require ROLE_ADMIN for /admin*
        - { path: '^/admin', roles: [ROLE_USER] }

        # or require ROLE_ADMIN or IS_AUTHENTICATED_FULLY for /admin*
        - { path: '^/admin', roles: [IS_AUTHENTICATED_FULLY] }

      
